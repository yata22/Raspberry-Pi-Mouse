//
// Created by yata on 12.02.16.
//

/**
 * Thanks to the sense_hat examples locate at /usr/src/sense-hat/examples/RTIMULib/
 */

#include "RTIMULib_connector.h"
#include <stdio.h>
#include <stdlib.h>
#include <RTIMULib.h>
#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

static RTIMU *imu = NULL;

int RTIMULibConnectorInit() {
    if (imu == NULL) {
        //  Using RTIMULib here allows it to use the .ini file generated by RTIMULibDemo.
        //  Or, you can create the .ini in some other directory by using:
        //  RTIMUSettings *settings = new RTIMUSettings("<directory path>", "RTIMULib");
        //  where <directory path> is the path to where the .ini file is to be loaded/saved

        RTIMUSettings *settings = new RTIMUSettings("RTIMULib");

        imu = RTIMU::createIMU(settings);

        if ((imu == NULL) || (imu->IMUType() == RTIMU_TYPE_NULL)) {
            printf("No IMU found\n");
            exit(1);
        }

        //  This is an opportunity to manually override any settings before the call IMUInit
        //  set up IMU

        imu->IMUInit();

        //  this is a convenient place to change fusion parameters
        imu->setSlerpPower(0.02);
        imu->setGyroEnable(true);
        imu->setAccelEnable(false);
        imu->setCompassEnable(false);
    }
    return 0;
}


int IMUGetPollInterval() {
    return imu->IMUGetPollInterval();
}


int IMURead() {
    return imu->IMURead();
}

GyroData getGyroData() {
    GyroData data;
    memset(&data, sizeof(data), 0);
    RTIMU_DATA imuData = imu->getIMUData();
    data.x = (float) imuData.gyro.x();
    data.y = (float) imuData.gyro.y();
    data.z = (float) imuData.gyro.z();
    return data;
}


#ifdef __cplusplus
}
#endif

